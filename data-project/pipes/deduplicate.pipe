TOKEN "snapshot_token" READ

NODE last_batch_deduplicates
DESCRIPTION >
    Deduplicate the reservations that arrived between the latest snapshot and the snapshot we are preparing

SQL >

    WITH toStartOfMinute(now() - interval 1 minute) as snapshot_timestamp
    SELECT toDateTime(snapshot_timestamp) as snapshot_id, *
    FROM flight_reservations
    WHERE
        timestamp BETWEEN (select max(snapshot_id) from flight_snapshots)
        AND snapshot_timestamp
    ORDER BY transaction_id, timestamp desc
    LIMIT 1 BY transaction_id



NODE prev_snapshot
DESCRIPTION >
    Get the unmodified rows in the snapshot window we are preparing.

SQL >

        SELECT snapshot_id, timestamp, transaction_id, flight_number, extra_bags, priority_boarding, meal_choice
        FROM flight_snapshots
        WHERE snapshot_id = (SELECT max(snapshot_id) FROM flight_snapshots)
          AND transaction_id NOT IN (
            SELECT transaction_id FROM last_batch_deduplicates
        )




NODE all_together
DESCRIPTION >
    Apply the current _snapshot_id_ to the unmodified rows. Then, union both nodes to have the full picture.

SQL >

    WITH
         (
            SELECT snapshot_id FROM last_batch_deduplicates LIMIT 1 BY snapshot_id
       ) as latest_snapshot_id
    SELECT
        ifNull(latest_snapshot_id, toStartOfMinute(now() - interval 1 minute) as snapshot_id,
        timestamp,
        transaction_id,
        flight_number,
        extra_bags,
        priority_boarding,
        meal_choice
    from prev_snapshot
    UNION ALL
    SELECT
        snapshot_id,
        timestamp,
        transaction_id,
        flight_number,
        extra_bags,
        priority_boarding,
        meal_choice
    FROM last_batch_deduplicates




